programa nombrePrograma

procesos
  proceso juntarF (ES flor: numero)
  comenzar
    mientras HayFlorEnLaEsquina
      tomarFlor
      flor:= flor +1
  fin

  proceso juntarP (ES papel: numero)
  comenzar
    mientras HayPapelEnLaEsquina
      tomarPapel
      papel:= papel +1
  fin

  { recorrer el lado sin conflicto }
  proceso sinConflictoFlores (ES flor: numero)
  comenzar
    repetir 6
      mover
      juntarF (flor)
  fin

  { recorrer el lado sin conflicto }
  proceso sinConflictoPapeles (ES papel: numero)
  comenzar
    repetir 2
      repetir 7
        mover
        juntarP (papel)
      derecha
  fin

  proceso irCalleF (E flor: numero)
  comenzar
    mientras (PosAv < 100) & (flor > 0)
      depositarFlor
      flor:= flor -1
      mover
  fin

  proceso irCalleP (E papel: numero)
  comenzar
    mientras (PosAv < 100) & (papel > 0)
      depositarPapel
      papel:= papel -1
      mover
  fin

  proceso irCalle (E flor: numero; E papel: numero; E calle: numero)
  comenzar
    Pos (1, calle)
    derecha
    derecha

    si (flor = 1)
      irCalleP (papel)
    sino
      si (papel = 1)
        irCalleF (flor)
      sino
        irCalleF (flor)
        irCalleP (papel)
  fin

areas
  ciudadPerimetros: AreaPC (2,2,16,16)
  rectas: AreaPC (1,20,100,22)
  ciudadJefe: AreaP (1,1,1,1)

robots
  robot tipo1 {recolecta flores, tiene riesgo de colicion en (5,8) y (8,5)}
  variables
    id, ca, flor: numero
  comenzar
    flor:= 0

    RecibirMensaje (id, jefe)

    sinConflictoFlores (flor)
    derecha

    repetir 6
      si (PosAv +1 = 5) & (PosCa = 8)
        BloquearEsquina(PosAv +1, PosCa)
        mover
        juntarF (flor)
      sino
        mover
        si (PosAv -1 = 5) & (PosCa = 8)
          LiberarEsquina(PosAv -1, PosCa)
        juntarF (flor)

    derecha
  
    repetir 6
      si (PosAv = 8) & (PosCa -1 = 5)
        BloquearEsquina(PosAv, PosCa -1)
        mover
        juntarF (flor)
      sino
        mover
        si (PosAv = 8) & (PosCa +1 = 5)
          LiberarEsquina(PosAv, PosCa +1)
        juntarF (flor)

    derecha
    
    sinConflictoFlores (flor)

    EnviarMensaje (id, jefe)
    RecibirMensaje (ca, jefe)

    irCalle (flor, 1, ca)
  fin



  robot tipo2 {recolecta todo, tiene riesgo de colicion en (5,8) y (8,5) | (15,9) y (9,15)}
  variables
    id, ca, f, p: numero
  comenzar
    f:= 0
    p:= 0

    RecibirMensaje (id, jefe)

    repetir 10
      si (PosAv = 5) & (PosCa +1 = 8)
        BloquearEsquina(PosAv, PosCa +1)
        mover
        juntarF (f)
        juntarP (p)
      sino
        mover
        si (PosAv = 5) & (PosCa -1 = 8)
          LiberarEsquina(PosAv, PosCa -1)
        juntarF (f)
        juntarP (p)
            
    derecha

    repetir 10
      si (PosAv +1 = 9) & (PosCa = 15)
        BloquearEsquina(PosAv +1, PosCa)
        mover
        juntarF (f)
        juntarP (p)
      sino
        mover
        si (PosAv -1 = 9) & (PosCa = 15)
          LiberarEsquina(PosAv -1, PosCa)
        juntarF (f)
        juntarP (p)
            
    derecha

    repetir 10
      si (PosAv = 15) & (PosCa -1 = 9)
        BloquearEsquina(PosAv, PosCa -1)
        mover
        juntarF (f)
        juntarP (p)
      sino
        mover
        si (PosAv = 15) & (PosCa +1 = 9)
          LiberarEsquina(PosAv, PosCa +1)
        juntarF (f)
        juntarP (p)
            
    derecha

    repetir 10
      si (PosAv -1 = 8) & (PosCa = 5)
        BloquearEsquina(PosAv -1, PosCa)
        mover
        juntarF (f)
        juntarP (p)
      sino
        mover
        si (PosAv +1 = 8) & (PosCa = 5)
          LiberarEsquina(PosAv +1, PosCa)
        juntarF (f)
        juntarP (p)
    
    EnviarMensaje (id, jefe)
    RecibirMensaje (ca, jefe)

    irCalle (f, p, ca)
  fin



  robot tipo3 {recolecta papeles, tiene riesgo de colicion en (15,9) y (9,15)}
  variables
    id, ca, papel: numero
  comenzar
    papel:= 0

    RecibirMensaje (id, jefe)

    repetir 7
      si (PosAv = 9) & (PosCa +1 = 15)
        BloquearEsquina(PosAv, PosCa +1)
        mover
        juntarP (papel)
      sino
        mover
        si (PosAv = 9) & (PosCa -1 = 15)
          LiberarEsquina(PosAv, PosCa -1)
        juntarP (papel)
            
    derecha

    sinConflictoPapeles (papel)

    repetir 7
      si (PosAv -1 = 15) & (PosCa = 9)
        BloquearEsquina(PosAv -1, PosCa)
        mover
        juntarP (papel)
      sino
        mover
        si (PosAv +1 = 15) & (PosCa = 9)
          LiberarEsquina(PosAv +1, PosCa)
        juntarP (papel)

    EnviarMensaje (id, jefe)
    RecibirMensaje (ca, jefe)

    irCalle (1, papel, ca)
  fin



  robot rJefe
  variables
    id, calle: numero
  comenzar
    EnviarMensaje (14, lim1)
    EnviarMensaje (15, lim2)
    EnviarMensaje (16, lim3)

    repetir 3
      RecibirMensaje (id, *)
      
    EnviarMensaje (1, r1)
    EnviarMensaje (2, r2)
    EnviarMensaje (3, r3)

    calle:= 19

    repetir 3
      calle:= calle +1

      RecibirMensaje (id, *)
      si (id = 1)
        EnviarMensaje (calle, r1)
      sino
        si (id = 2)
          EnviarMensaje (calle, r2)
        sino
          EnviarMensaje (calle, r3)
  fin



  robot limpiadores
  variables
    f, p, aveFin: numero
  comenzar
    RecibirMensaje (aveFin, jefe)
    derecha

    mientras (PosAv < 100)
      juntarF (f)
      juntarP (p)
      mover
    juntarF (f)
    juntarP (p)

    Pos(aveFin, 2)

    EnviarMensaje (1, jefe)
  fin



variables
  r1: tipo1
  r2: tipo2
  r3: tipo3
  jefe: rJefe
  lim1: limpiadores
  lim2: limpiadores
  lim3: limpiadores
comenzar
  AsignarArea (r1, ciudadPerimetros)
  AsignarArea (r2, ciudadPerimetros)
  AsignarArea (r3, ciudadPerimetros)

  AsignarArea (r1, rectas)
  AsignarArea (r2, rectas)
  AsignarArea (r3, rectas)

  AsignarArea (jefe, ciudadJefe)

  AsignarArea (lim1, rectas)
  AsignarArea (lim2, rectas)
  AsignarArea (lim3, rectas)
  AsignarArea (lim1, ciudadPerimetros)
  AsignarArea (lim2, ciudadPerimetros)
  AsignarArea (lim3, ciudadPerimetros)
  Iniciar (lim1,1,20)
  Iniciar (lim2,1,21)
  Iniciar (lim3,1,22)

  Iniciar (r1,2,2)
  Iniciar (r2,5,5)
  Iniciar (r3,9,9)
  Iniciar (jefe,1,1)
fin
